{"version":3,"sources":["webpack:///src/app/errors/test-errors/test-errors.component.ts","webpack:///src/app/errors/test-errors/test-errors.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/admin/photo-management/photo-management.component.html","webpack:///src/app/admin/photo-management/photo-management.component.ts","webpack:///src/app/errors/not-found/not-found.component.ts","webpack:///src/app/errors/not-found/not-found.component.html","webpack:///src/app/_services/account.service.ts","webpack:///src/app/errors/server-error/server-error.component.html","webpack:///src/app/errors/server-error/server-error.component.ts","webpack:///src/app/_directives/has-role.directive.ts","webpack:///src/app/_services/busy.service.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/_models/pagination.ts","webpack:///src/environments/environment.ts","webpack:///src/app/_interceptors/jwt.interceptor.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/_forms/date-inputs/date-inputs.component.html","webpack:///src/app/_forms/date-inputs/date-inputs.component.ts","webpack:///src/app/_modules/shared.module.ts","webpack:///src/app/_interceptors/error.interceptor.ts","webpack:///src/app/_guards/admin.guard.ts","webpack:///src/app/_services/admin.service.ts","webpack:///src/app/admin/user-management/user-management.component.ts","webpack:///src/app/admin/user-management/user-management.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_services/message.service.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/_interceptors/loading.interceptor.ts","webpack:///src/app/_services/members.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/_resolvers/member-detailed.resolver.ts","webpack:///src/app/_forms/text-input/text-input.component.html","webpack:///src/app/_forms/text-input/text-input.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/_services/presence.service.ts","webpack:///src/app/_models/userParams.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.html","webpack:///src/app/admin/admin-panel/admin-panel.component.ts","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/_services/paginationHelper.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/modals/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/modals/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_services/confirm.service.ts","webpack:///src/app/modals/roles-modal/roles-modal.component.ts","webpack:///src/app/modals/roles-modal/roles-modal.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TestErrorsComponent","http","baseUrl","apiUrl","validationErrors","get","subscribe","response","console","log","error","post","get500Error","get400Error","get401Error","get404Error","get400ValidationError","RegisterComponent","accountService","toastr","fb","router","cancelRegister","initializeForm","maxDate","Date","setFullYear","getFullYear","registerForm","group","gender","username","required","knownAs","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","matchValues","controls","valueChanges","updateValueAndValidity","matchTo","control","value","parent","isMatching","register","navigateByUrl","emit","cancel","MemberMessagesComponent","messageService","sendMessage","messageContent","then","messageForm","reset","PhotoManagementComponent","adminService","getPhotosForApproval","photos","photoId","approvePhoto","splice","findIndex","p","id","rejectPhoto","NotFoundComponent","AccountService","presence","currentUserSource","currentUser$","asObservable","model","pipe","user","setCurrentUser","createHubConnection","roles","getDecodedToken","token","role","Array","isArray","push","localStorage","setItem","JSON","stringify","next","removeItem","stopHubConnection","parse","atob","split","ServerErrorComponent","navigation","getCurrentNavigation","extras","state","HasRoleDirective","viewContainerRef","templateRef","clear","some","r","appHasRole","includes","createEmbeddedView","BusyService","spinnerService","busyRequestCount","show","undefined","type","bdColor","color","hide","HomeComponent","registerMode","event","PaginatedResult","environment","production","hubUrl","JwtInterceptor","request","currentUser","clone","setHeaders","Authorization","handle","$event","stopPropagation","MessagesComponent","confirmService","messages","container","pageNumber","pageSize","loading","loadMessages","getMessages","result","pagination","confirm","deleteMessage","m","page","DateInputsComponent","ngControl","valueAccessor","bsConfig","containerClass","dateInputFormat","obj","fn","SharedModule","forRoot","positionClass","ErrorInterceptor","status","errors","modalStateErrors","key","flat","statusText","navigationExtras","AdminGuard","AdminService","UserManagementComponent","modalService","getUsersWithRoles","users","config","initialState","getRolesArray","bsModalRef","content","updateSelectedRoles","values","rolesToUpdate","filter","el","checked","map","name","updateUserRoles","userRoles","availableRoles","forEach","isMatch","userRole","MemberDetailComponent","route","routeReuseStrategy","shouldReuseRoute","data","member","queryParams","params","tab","selectTab","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photo","small","url","medium","big","getMessagesThread","tabId","memberTabs","tabs","active","activeTab","heading","length","onTabActivated","AuthGuard","MessageService","messageThreadSource","messageThread$","otherUsername","hubConnection","withUrl","accessTokenFactory","withAutomaticReconnect","build","start","on","message","connections","x","dateread","now","stop","append","invoke","recipientUsername","MemberListComponent","membersService","genderList","display","userParams","getUserParams","loadMembers","setUserParams","getMembers","members","resetUserParams","resetFilters","AppComponent","title","getItem","LoadingInterceptor","busyService","busy","idle","MembersService","memberCache","Map","Object","join","minAge","toString","maxAge","orderBy","set","reduce","arr","elem","concat","find","put","index","indexOf","predicate","AppModule","provide","useClass","multi","uploader","PhotoEditorComponent","memberService","initializeUploader","e","hasBaseDropZoneOver","setMainPhoto","photoUrl","isMain","deletePhoto","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","headers","fileOverBase","MemberDetailedResolver","getMember","paramMap","TextInputComponent","ListsComponent","loadLikes","getLikes","NavComponent","login","logout","MemberCardComponent","addLike","success","PresenceService","onlineUsersSource","onlineUsers$","usernames","info","onTap","UserParams","AdminPanelComponent","MemberEditComponent","editForm","dirty","returnValue","loadMember","updateMember","getPaginatedResult","paginatedResult","observe","body","getPaginationHeaders","PreventUnsavedChangesGuard","component","ConfirmDialogComponent","decline","routes","path","runGuardsAndResolvers","canActivate","children","resolve","canDeactivate","pathMatch","AppRoutingModule","ConfirmService","btnOkText","btnCancelText","bsModal","getResult","observer","subscription","onHidden","complete","unsubscribe","RolesModalComponent","updateRoles","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css'],\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ng-container >\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get500Error()\">Test 500 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400Error()\">Test 400 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get401Error()\">Test 401 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get404Error()\">Test 404 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400ValidationError()\">Test 400 validation error </button>\r\n\r\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\"> {{error}} </li>\r\n    </ul>\r\n  </div>\r\n</ng-container>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: [\r\n        '',\r\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('password')],\r\n      ],\r\n    });\r\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\r\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n\r\n  register() {\r\n    this.accountService.register(this.registerForm.value).subscribe(\r\n      (response) => {\r\n        this.router.navigateByUrl('/members');\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"registerForm\"\r\n  (ngSubmit)=\"registerForm.valid && register()\"\r\n  autocomplete=\"off\"\r\n>\r\n  <h2 class=\"text-center text-primary\">Sign up</h2>\r\n  <hr />\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right: 10px\"> I'm a: </label>\r\n    <label class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"male\" formControlName=\"gender\" /> Male\r\n    </label>\r\n    <label class=\"radio-inline\">\r\n      <input\r\n        type=\"radio\"\r\n        value=\"female\"\r\n        formControlName=\"gender\"\r\n        class=\"ml-3\"\r\n      />\r\n      Female\r\n    </label>\r\n  </div>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['username']\"\r\n    [label]=\"'Username'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['knownAs']\"\r\n    [label]=\"'Known As'\"\r\n  ></app-text-input>\r\n  <app-date-inputs\r\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\r\n    [label]=\"'Date of Birth'\"\r\n    [maxDate]=\"maxDate\"\r\n  ></app-date-inputs>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['city']\"\r\n    [label]=\"'City'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['country']\"\r\n    [label]=\"'Country'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['password']\"\r\n    [label]=\"'Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['confirmPassword']\"\r\n    [label]=\"'Confirm Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n\r\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\">{{ error }}</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"form-group text-center\">\r\n    <button\r\n      [disabled]=\"!registerForm.valid\"\r\n      class=\"btn btn-success mr-2\"\r\n      type=\"submit\"\r\n    >\r\n      Register\r\n    </button>\r\n    <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</form>\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet\r\n    </div>\r\n\r\n    <ul\r\n      #scrollMe\r\n      style=\"overflow: scroll; height: 500px\"\r\n      [scrollTop]=\"scrollMe.scrollHeight\"\r\n      *ngIf=\"(messageService.messageThread$ | async)?.length > 0\"\r\n      class=\"chat\"\r\n    >\r\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img\r\n              class=\"rounded-circle\"\r\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n            />\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\">{{\r\n                  message.messageSent | timeago\r\n                }}</span>\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    !message.dateread && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (unread)\r\n                </span>\r\n                <span\r\n                  class=\"text-success\"\r\n                  *ngIf=\"\r\n                    message.dateread && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (read) {{ message.dateread | timeago }}\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{ message.content }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          name=\"messageContent\"\r\n          required\r\n          [(ngModel)]=\"messageContent\"\r\n          type=\"text\"\r\n          class=\"form-control input-sm\"\r\n          placeholder=\"Send a private message\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            [disabled]=\"!messageForm.valid\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input()\r\n  username: string;\r\n  @Input() messages: Message[];\r\n  messageContent: string;\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\r\n    <h4>{{ photo.username }}</h4>\r\n    <img\r\n      src=\"{{ photo.url }}\"\r\n      class=\"img-thumbnail p-1\"\r\n      alt=\"{{ photo.username }}\"\r\n    />\r\n    <div class=\"text-center\">\r\n      <button\r\n        class=\"btn btn-sm btn-success mr-1\"\r\n        (click)=\"approvePhoto(photo.id)\"\r\n      >\r\n        Approve\r\n      </button>\r\n      <button class=\"btn btn-sm btndanger\" (click)=\"rejectPhoto(photo.id)\">\r\n        Reject\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/Photo';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css'],\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n  photos: Photo[];\r\n  constructor(private adminService: AdminService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getPhotosForApproval();\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    this.adminService.getPhotosForApproval().subscribe((photos) => {\r\n      this.photos = photos;\r\n    });\r\n  }\r\n  approvePhoto(photoId) {\r\n    this.adminService.approvePhoto(photoId).subscribe(() => {\r\n      this.photos.splice(\r\n        this.photos.findIndex((p) => p.id === photoId),\r\n        1\r\n      );\r\n    });\r\n  }\r\n  rejectPhoto(photoId) {\r\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\r\n      this.photos.splice(\r\n        this.photos.findIndex((p) => p.id === photoId),\r\n        1\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>\r\n    Not found\r\n  </h1>\r\n  <button class=\"btn-info btn-lg\" routerLink=\"/\"> Return to homepage </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService) {}\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1])); //[0] = Header [1] = Payload\r\n  }\r\n}\r\n","<h4> Internal server error - refreshing the page will make the error disappear!</h4>\r\n\r\n<ng-container *ngIf=\"error\">\r\n  <h5 class=\"text-danger\">Error: {{error.message}} </h5>\r\n  <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n  <p>What to do next?</p>\r\n  <ol>\r\n    <li> Open the chrome dev tools </li>\r\n    <li> Inspect the network tab </li>\r\n    <li> Check the failing request </li>\r\n    <li> Examing the requerst URL - make sure it is correct </li>\r\n    <li> Reproduce the error in Postman - if we seen the same response, then the issue is not with Angular </li>\r\n  </ol>\r\n  <p>Following is the stack trace</p>\r\n  <code class=\"mt-5\" style=\"background-color: whitesmoke;\"> {{error.details}} </code>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  error : any\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation()\r\n    this.error = navigation?.extras?.state?.error\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Directive, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]',\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    if (!this.user?.roles || this.user === null) {\r\n      this.viewContainerRef.clear();\r\n      return;\r\n    }\r\n    if (this.user?.roles.some((r) => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerService: NgxSpinnerService) {}\r\n\r\n  busy() {\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined, {\r\n      type: 'square-jelly-box',\r\n      bdColor: 'rgba(0, 0, 0, 0.8)',\r\n      color: '#fff',\r\n    });\r\n  }\r\n\r\n  idle() {\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div *ngIf=\"!registerMode\"  style ='text-align: center;'>\r\n    <h1> Find your match</h1>\r\n    <p class = \"lead\"> Come on in to view your matches... all you need is to sign up!</p>\r\n    <div class=\"text-center\">\r\n      <button (click) =\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\"> Register </button>\r\n      <button class=\"btn btn-info btn-lg\"> Learn more </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"registerMode\" class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-4\">\r\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\" > </app-register>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  registerMode = false\r\n  users : any\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerToggle(){\r\n    this.registerMode = !this.registerMode\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean){\r\n    this.registerMode = event\r\n  }\r\n\r\n}\r\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (currentUser = user));\r\n\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","<div class=\"row mb-4\">\r\n  <div class=\"btn-group\" name=\"container\">\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Unread\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-envelope\"> Unread </i>\r\n    </button>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Inbox\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-envelope-open\"> Inbox </i>\r\n    </button>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Outbox\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-paper-plane\"> Outbox </i>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n  <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n    <tr>\r\n      <th style=\"width: 40%\">Message</th>\r\n      <th style=\"width: 20%\">From / To</th>\r\n      <th style=\"width: 20%\">Sent / Received</th>\r\n      <th style=\"width: 20%\">Message</th>\r\n    </tr>\r\n    <tr\r\n      [hidden]=\"loading\"\r\n      *ngFor=\"let message of messages\"\r\n      routerLink=\"{{\r\n        container === 'Outbox'\r\n          ? '/members/' + message.recipientUsername\r\n          : '/members/' + message.senderUsername\r\n      }}\"\r\n      [queryParams]=\"{ tab: 3 }\"\r\n    >\r\n      <td>{{ message.content }}</td>\r\n      <td>\r\n        <div *ngIf=\"container === 'Outbox'\">\r\n          <img\r\n            src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\r\n            alt=\"{{ message.recipientUsername }}\"\r\n            class=\"img-circle rounded-circle mr-2\"\r\n          />\r\n          <strong>{{ message.recipientUsername | titlecase }}</strong>\r\n        </div>\r\n        <div *ngIf=\"container !== 'Outbox'\">\r\n          <img\r\n            src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n            alt=\"{{ message.senderUsername }}\"\r\n            class=\"img-circle rounded-circle mr-2\"\r\n          />\r\n          <strong>{{ message.senderUsername | titlecase }}</strong>\r\n        </div>\r\n      </td>\r\n      <td>{{ message.messageSent | timeago }}</td>\r\n      <td>\r\n        <button\r\n          (click)=\"$event.stopPropagation()\"\r\n          (click)=\"deleteMessage(message.id)\"\r\n          class=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n    >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css'],\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmService: ConfirmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .getMessages(this.pageNumber, this.pageSize, this.container)\r\n      .subscribe((response) => {\r\n        this.messages = response.result;\r\n        this.pagination = response.pagination;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService\r\n      .confirm('Confirm delete message', 'This cannot be undone')\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.messageService.deleteMessage(id).subscribe(() => {\r\n            this.messages.splice(\r\n              this.messages.findIndex((m) => m.id === id),\r\n              1\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    console.log('sigo corriendo');\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.page;\r\n      this.loadMessages();\r\n    }\r\n  }\r\n}\r\n","<div class=\"form-group\">\n  <input\n    type=\"text\"\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    class=\"form-control\"\n    [formControl]=\"ngControl.control\"\n    placeholder=\"{{ label }}\"\n    bsDatepicker\n    [bsConfig]=\"bsConfig\"\n    [maxDate]=\"maxDate\"\n  />\n  <div\n    *ngIf=\"ngControl.control.errors?.required\"\n    class=\"invalid-feedback\"\n  ></div>\n</div>\n","import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-inputs',\n  templateUrl: './date-inputs.component.html',\n  styleUrls: ['./date-inputs.component.css'],\n})\nexport class DateInputsComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-dark-blue',\n      dateInputFormat: 'DD MM YYYY',\n    };\n  }\n\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right',\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof error.error === 'object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n\r\n            case 401:\r\n              this.toastr.error(\r\n                error.statusText === 'OK' ? 'Unauthorized' : error.statusText,\r\n                error.status\r\n              );\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {\r\n                state: { error: error.error },\r\n              };\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.error(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator'))\r\n          return true;\r\n        this.toastr.error('You cannot enter this area');\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Photo } from '../_models/Photo';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<Partial<User[]>>(\r\n      this.baseUrl + 'admin/users-with-roles'\r\n    );\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post(\r\n      this.baseUrl + `admin/edit-roles/${username}?roles=` + roles,\r\n      {}\r\n    );\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\r\n  }\r\n  approvePhoto(photoId: number) {\r\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\r\n  }\r\n  rejectPhoto(photoId: number) {\r\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css'],\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe((users) => {\r\n      this.users = users;\r\n    });\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user),\r\n      },\r\n    };\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\r\n      const rolesToUpdate = {\r\n        roles: [\r\n          ...values.filter((el) => el.checked === true).map((el) => el.name),\r\n        ],\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService\r\n          .updateUserRoles(user.username, rolesToUpdate.roles)\r\n          .subscribe(() => {\r\n            user.roles = [...rolesToUpdate.roles];\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      { name: 'Admin', value: 'Admin' },\r\n      { name: 'Moderator', value: 'Moderator' },\r\n      { name: 'Member', value: 'Member' },\r\n    ];\r\n\r\n    availableRoles.forEach((role) => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    });\r\n\r\n    return roles;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <table class=\"table\">\r\n    <tr>\r\n      <th style=\"width: 30%\">Username</th>\r\n      <th style=\"width: 40%\">Active Roles</th>\r\n      <th style=\"width: 30%\"></th>\r\n    </tr>\r\n    <tr *ngFor=\"let user of users\">\r\n      <td>{{ user.username }}</td>\r\n      <td>{{ user.roles }}</td>\r\n      <td>\r\n        <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\r\n          Edit roles\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  NgxGalleryAnimation,\r\n  NgxGalleryImage,\r\n  NgxGalleryOptions,\r\n} from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css'],\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(\r\n    public presence: PresenceService,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService,\r\n    private accountService: AccountService,\r\n    private router: Router\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe((data) => {\r\n      this.member = data.member;\r\n    });\r\n    this.route.queryParams.subscribe((params) => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    });\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false,\r\n      },\r\n    ];\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url,\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService\r\n      .getMessagesThread(this.member.username)\r\n      .subscribe((messages) => (this.messages = messages));\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img\r\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ member.knownAs }}\"\r\n        class=\"card-img-top img-thumbnail\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <div\r\n          class=\"mb-2\"\r\n          *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\"\r\n        >\r\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n        </div>\r\n        <div>\r\n          <strong> Location:</strong>\r\n          <p>{{ member.city }}, {{ member.country }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Age:</strong>\r\n          <p>{{ member.age }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Last Activate:</strong>\r\n          <p>{{ member.lastActive | timeago }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Member since:</strong>\r\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <div class=\"btn-group d-flex\">\r\n          <button class=\"btn btn-success\">Like</button>\r\n          <button (click)=\"selectTab(3)\" class=\"btn btn-info\">Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\" #memberTabs>\r\n      <tab\r\n        heading=\"About {{ member.knownAs }}\"\r\n        (selectTab)=\"onTabActivated($event)\"\r\n      >\r\n        <h4>Desctription</h4>\r\n        <p>{{ member.introduction }}</p>\r\n        <h4>Looking for</h4>\r\n        <p>{{ member.lookingFor }}</p>\r\n      </tab>\r\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\r\n        <h4>Interests</h4>\r\n        <p>{{ member.interests }}</p>\r\n      </tab>\r\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\r\n        <ngx-gallery\r\n          [options]=\"galleryOptions\"\r\n          [images]=\"galleryImages\"\r\n          style=\"display: inline-block; margin-bottom: 20px\"\r\n        ></ngx-gallery>\r\n      </tab>\r\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\r\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user =>{\r\n        if (user) return true\r\n        this.toastr.error(\"You shall not pass!\")\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.hubConnection.start().catch((error) => console.log(error));\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some((x) => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateread) {\r\n              message.dateread = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessagesThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'messages/thread/' + username\r\n    );\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection\r\n      .invoke('SendMessage', {\r\n        recipientUsername: username,\r\n        content,\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <form\r\n    #form=\"ngForm\"\r\n    class=\"form-inline mb-3\"\r\n    (ngSubmit)=\"loadMembers()\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label> Age from: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"minAge\"\r\n        [(ngModel)]=\"userParams.minAge\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group px-2\">\r\n      <label> Age to: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"maxAge\"\r\n        [(ngModel)]=\"userParams.maxAge\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group px-2\">\r\n      <label> Show: </label>\r\n      <select\r\n        name=\"gender\"\r\n        style=\"width: 130px\"\r\n        [(ngModel)]=\"userParams.gender\"\r\n        class=\"form-control ml-1\"\r\n      >\r\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n          {{ gender.display }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply filters</button>\r\n    <button (click)=\"resetFilters()\" class=\"btn btn-warning ml-1\" type=\"submit\">\r\n      Reset filters\r\n    </button>\r\n\r\n    <div class=\"col\">\r\n      <div class=\"btn-group float-right\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"lastActive\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Last Active\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"created\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Newest Members\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *ngFor=\"let member of members\" class=\"col-2\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css'],\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' },\r\n  ];\r\n\r\n  constructor(private membersService: MembersService) {\r\n    this.userParams = membersService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.membersService.setUserParams(this.userParams);\r\n    this.membersService.getMembers(this.userParams).subscribe((response) => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    });\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.membersService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.membersService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating App';\r\n  users: any;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private presence: PresenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n  }\r\n}\r\n","<app-nav></app-nav>\r\n\r\n<ngx-spinner>\r\n  <h3>Loading ...</h3>\r\n</ngx-spinner>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      delay(500),\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    });\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n    let params = getPaginationHeaders(\r\n      userParams.pageNumber,\r\n      userParams.pageSize\r\n    );\r\n\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(\r\n      this.baseUrl + 'users',\r\n      params,\r\n      this.http\r\n    ).pipe(\r\n      map((response) => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username === username);\r\n\r\n    if (member) {\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + `users/${username}`);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    );\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(\r\n      this.baseUrl + 'likes',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputsComponent } from './_forms/date-inputs/date-inputs.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputsComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/Photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css'],\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private memberService: MembersService\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach((p) => {\r\n        if (p.isMain) p.isMain = false;\r\n        if (p.id === photo.id) p.isMain = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter((x) => x.id !== photoId);\r\n    });\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024,\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n        if (photo.isMain) {\r\n          this.user.photoUrl = photo.url;\r\n          this.member.photoUrl = photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n    <img\r\n      src=\"{{ photo.url }}\"\r\n      alt=\"{{ photo.url }}\"\r\n      class=\"img-thumbnail p-1\"\r\n      [class.not-approved]=\"!photo.isApproved\"\r\n    />\r\n\r\n    <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\r\n      <span class=\"text-danger\">Awaiting approval</span>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center mt-1 mb-2\">\r\n      <button\r\n        [disabled]=\"photo.isMain || !photo.isApproved\"\r\n        (click)=\"setMainPhoto(photo)\"\r\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\r\n        class=\"btn btn-sm\"\r\n      >\r\n        Main\r\n      </button>\r\n      <button\r\n        [disabled]=\"photo.isMain\"\r\n        (click)=\"deletePhoto(photo.id)\"\r\n        class=\"btn btn-sm btn-danger\"\r\n      >\r\n        <i class=\"fa fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-3\">\r\n    <h3>Select files</h3>\r\n\r\n    <div\r\n      ng2FileDrop\r\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\r\n      (fileOver)=\"fileOverBase($event)\"\r\n      [uploader]=\"uploader\"\r\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\"\r\n    >\r\n      <i class=\"fa fa-upload fa-3x\"></i>\r\n      Drop photos here\r\n    </div>\r\n\r\n    Multiple\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\r\n\r\n    Single\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div\r\n    class=\"col-md-9\"\r\n    style=\"margin-bottom: 40px\"\r\n    *ngIf=\"uploader?.queue?.length\"\r\n  >\r\n    <h3>Upload queue</h3>\r\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th width=\"50%\">Name</th>\r\n          <th>Size</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of uploader.queue\">\r\n          <td>\r\n            <strong>{{ item?.file?.name }}</strong>\r\n          </td>\r\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\r\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div>\r\n      <div>\r\n        Queue progress:\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success btn-s\"\r\n        (click)=\"uploader.uploadAll()\"\r\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\r\n      >\r\n        <span class=\"fa fa-upload\"></span> Upload all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-warning btn-s\"\r\n        (click)=\"uploader.cancelAll()\"\r\n        [disabled]=\"!uploader.isUploading\"\r\n      >\r\n        <span class=\"fa fa-ban\"></span> Cancel all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger btn-s\"\r\n        (click)=\"uploader.clearQueue()\"\r\n        [disabled]=\"!uploader.queue.length\"\r\n      >\r\n        <span class=\"fa fa-trash\"></span> Remove all\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot,\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n  constructor(private memberService: MembersService) {}\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type=\"{{ type }}\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    Please enter a {{ label }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at least\r\n    {{ ngControl.control.errors.minlegth[\"requiredLength\"] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at most\r\n    {{ ngControl.control.errors.maxlength[\"requiredLength\"] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\r\n    Confirm password do not match\r\n  </div>\r\n</div>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css'],\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n  registerOnChange(fn: any): void {}\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>\r\n    {{ predicate === \"liked\" ? \"Members I likes\" : \"Members who like me\" }}\r\n  </h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"btn-group\" name=\"predicate\">\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        btnRadio=\"liked\"\r\n        [(ngModel)]=\"predicate\"\r\n        (click)=\"loadLikes()\"\r\n      >\r\n        Members I like\r\n      </button>\r\n      <button\r\n        class=\"btn btn-warning\"\r\n        btnRadio=\"likedBy\"\r\n        [(ngModel)]=\"predicate\"\r\n        (click)=\"loadLikes()\"\r\n      >\r\n        Members who like me\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\">\r\n    <div class=\"col-2\" *ngFor=\"let member of members\">\r\n      <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css'],\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes() {\r\n    this.memberService\r\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\r\n      .subscribe((response) => {\r\n        this.members = response.result;\r\n        this.pagination = response.pagination;\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\" routerLinkActive=\"active\"\r\n      >Dating App</a\r\n    >\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\"\r\n            >Matches</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\"\r\n            >Lists</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\"\r\n            >Messages</a\r\n          >\r\n        </li>\r\n        <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\"\r\n            >Admin</a\r\n          >\r\n        </li>\r\n      </ng-container>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\"\r\n          >Errors</a\r\n        >\r\n      </li>\r\n    </ul>\r\n\r\n    <div\r\n      class=\"dropdown\"\r\n      *ngIf=\"accountService.currentUser$ | async as user\"\r\n      dropdown\r\n    >\r\n      <img\r\n        src=\"{{ user.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ user.username }}\"\r\n      />\r\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>\r\n        Welcome {{ user.knownAs || user.username | titlecase }}\r\n      </a>\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a routerLink=\"/member/edit\" class=\"dropdown-item\"> Edit Profile </a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"logout()\"> Logout </a>\r\n      </div>\r\n    </div>\r\n\r\n    <form\r\n      #loginForm=\"ngForm\"\r\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n      class=\"form-inline mt-2 mt-md-0\"\r\n      (ngSubmit)=\"login()\"\r\n      autocomplete=\"off\"\r\n    >\r\n      <input\r\n        name=\"username\"\r\n        [(ngModel)]=\"model.username\"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n      />\r\n\r\n      <input\r\n        name=\"password\"\r\n        [(ngModel)]=\"model.password\"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n  constructor(\r\n    public accountService: AccountService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login() {\r\n    this.accountService.login(this.model).subscribe((response) => {\r\n      this.router.navigateByUrl('/members');\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css'],\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n  constructor(\r\n    private memberService: MembersService,\r\n    private toastr: ToastrService,\r\n    public presence: PresenceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success(`You have liked ${member.knownAs}`);\r\n    });\r\n  }\r\n}\r\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img\r\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n      alt=\"{{ member.knownAs }}\"\r\n      class=\"card-img-top\"\r\n    />\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <button class=\"btn-primary\" routerLink=\"/members/{{ member.username }}\">\r\n          <i class=\"fa fa-user\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button (click)=\"addLike(member)\" class=\"btn-primary\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button\r\n          class=\"btn-primary\"\r\n          routerLink=\"/members/{{ member.username }}\"\r\n          [queryParams]=\"{ tab: 3 }\"\r\n        >\r\n          <i class=\"fa fa-envelope\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <span\r\n        [class.is-online]=\"\r\n          (presence.onlineUsers$ | async).includes(member.username)\r\n        \"\r\n      >\r\n        <i class=\"fa fa-user mr-2\"></i>\r\n      </span>\r\n      {{ member.knownAs }}, {{ member.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) {}\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.hubConnection.start().catch((error) => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([...usernames, username]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UserIsOffline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([\r\n          ...usernames.filter((x) => x !== username),\r\n        ]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\r\n      this.toastr\r\n        .info(knownAs + ' has sent you a new message!')\r\n        .onTap.pipe(take(1))\r\n        .subscribe(() =>\r\n          this.router.navigateByUrl('/members/' + username + '?tab=3')\r\n        );\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch((error) => console.log(error));\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  orderBy = 'lastActive';\r\n\r\n  constructor(user: User) {\r\n    this.gender = user.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n  <tabset class=\"member-tabset\">\r\n    <tab heading=\"User management\" *appHasRole=\"['Admin']\">\r\n      <div class=\"container\">\r\n        <app-user-management></app-user-management>\r\n      </div>\r\n    </tab>\r\n\r\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\r\n      <div class=\"container\">\r\n        <app-photo-management></app-photo-management>\r\n      </div>\r\n    </tab>\r\n  </tabset>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css'],\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\r\n    $event: any\r\n  ) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private memberService: MembersService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService\r\n      .getMember(this.user.username)\r\n      .subscribe((member) => (this.member = member));\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n  <div class=\"col-4\">\r\n    <h1>Your profile</h1>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n      <strong>Information:</strong> You have made changes. Any unsaved changes\r\n      will be lost\r\n    </div>\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img\r\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ member.knownAs }}\"\r\n        class=\"card-img-top img-thumbnail\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <strong> Location:</strong>\r\n          <p>{{ member.city }}, {{ member.country }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Age:</strong>\r\n          <p>{{ member.age }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Last Activate:</strong>\r\n          <p>{{ member.lastActive | timeago }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Member since:</strong>\r\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <button\r\n          [disabled]=\"!editForm.dirty\"\r\n          form=\"editForm\"\r\n          class=\"btn btn-success btn-block\"\r\n          type=\"submit\"\r\n        >\r\n          Save changes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\">\r\n      <tab heading=\"About {{ member.knownAs }}\">\r\n        <form #editForm=\"ngForm\" (ngSubmit)=\"updateMember()\" id=\"editForm\">\r\n          <h4>Desctription</h4>\r\n          <textarea\r\n            [(ngModel)]=\"member.introduction\"\r\n            name=\"introduction\"\r\n            rows=\"6\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Looking for</h4>\r\n          <textarea\r\n            [(ngModel)]=\"member.lookingFor\"\r\n            name=\"lookingFor\"\r\n            rows=\"6\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Interests</h4>\r\n          <textarea\r\n            [(ngModel)]=\"member.interests\"\r\n            name=\"interests\"\r\n            rows=\"6\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Location Details</h4>\r\n          <div class=\"form-inline\">\r\n            <label for=\"city\"> City: </label>\r\n            <input\r\n              [(ngModel)]=\"member.city\"\r\n              type=\"text\"\r\n              name=\"city\"\r\n              class=\"form-control mx-2\"\r\n            />\r\n            <label for=\"country\"> Country: </label>\r\n            <input\r\n              [(ngModel)]=\"member.country\"\r\n              type=\"text\"\r\n              name=\"country\"\r\n              class=\"form-control mx-2\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </tab>\r\n      <tab heading=\"Edit Photos\">\r\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map((response) => {\r\n      paginatedResult.result = response.body;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(\r\n          response.headers.get('Pagination')\r\n        );\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n  constructor(private confirmService: ConfirmService) {}\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm();\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{ message }}</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent },\r\n      {\r\n        path: 'members/:username',\r\n        component: MemberDetailComponent,\r\n        resolve: { member: MemberDetailedResolver },\r\n      },\r\n      {\r\n        path: 'member/edit',\r\n        component: MemberEditComponent,\r\n        canDeactivate: [PreventUnsavedChangesGuard],\r\n      },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      {\r\n        path: 'admin',\r\n        component: AdminPanelComponent,\r\n        canActivate: [AdminGuard],\r\n      },\r\n    ],\r\n  },\r\n  { path: 'errors', component: TestErrorsComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: 'server-error', component: ServerErrorComponent },\r\n  { path: '**', component: HomeComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModal: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModal = this.modalService.show(ConfirmDialogComponent, config);\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModal.onHidden.subscribe(() => {\n        observer.next(this.bsModal.content.result);\n        observer.complete();\n      });\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css'],\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[];\r\n\r\n  constructor(public bsModalRef: BsModalRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit Roles for {{ user.username }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n      <input\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        [checked]=\"role.checked\"\r\n        value=\"role.name\"\r\n        (change)=\"role.checked = !role.checked\"\r\n        [disabled]=\"roles.name === 'Admin' && user.username === 'admin'\"\r\n      />\r\n      <label> {{ role.name }} </label>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}