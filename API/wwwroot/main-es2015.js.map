{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_forms/date-inputs/date-inputs.component.html","./src/app/_forms/date-inputs/date-inputs.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css'],\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<ng-container >\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get500Error()\">Test 500 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400Error()\">Test 400 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get401Error()\">Test 401 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get404Error()\">Test 404 error </button>\r\n  <button class=\"btn btn-outline-primary mr-3\" (click)=\"get400ValidationError()\">Test 400 validation error </button>\r\n\r\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\"> {{error}} </li>\r\n    </ul>\r\n  </div>\r\n</ng-container>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: [\r\n        '',\r\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('password')],\r\n      ],\r\n    });\r\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\r\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n\r\n  register() {\r\n    this.accountService.register(this.registerForm.value).subscribe(\r\n      (response) => {\r\n        this.router.navigateByUrl('/members');\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"registerForm\"\r\n  (ngSubmit)=\"registerForm.valid && register()\"\r\n  autocomplete=\"off\"\r\n>\r\n  <h2 class=\"text-center text-primary\">Sign up</h2>\r\n  <hr />\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right: 10px\"> I'm a: </label>\r\n    <label class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"male\" formControlName=\"gender\" /> Male\r\n    </label>\r\n    <label class=\"radio-inline\">\r\n      <input\r\n        type=\"radio\"\r\n        value=\"female\"\r\n        formControlName=\"gender\"\r\n        class=\"ml-3\"\r\n      />\r\n      Female\r\n    </label>\r\n  </div>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['username']\"\r\n    [label]=\"'Username'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['knownAs']\"\r\n    [label]=\"'Known As'\"\r\n  ></app-text-input>\r\n  <app-date-inputs\r\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\r\n    [label]=\"'Date of Birth'\"\r\n    [maxDate]=\"maxDate\"\r\n  ></app-date-inputs>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['city']\"\r\n    [label]=\"'City'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['country']\"\r\n    [label]=\"'Country'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['password']\"\r\n    [label]=\"'Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['confirmPassword']\"\r\n    [label]=\"'Confirm Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n\r\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\">{{ error }}</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"form-group text-center\">\r\n    <button\r\n      [disabled]=\"!registerForm.valid\"\r\n      class=\"btn btn-success mr-2\"\r\n      type=\"submit\"\r\n    >\r\n      Register\r\n    </button>\r\n    <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"button\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</form>\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet\r\n    </div>\r\n\r\n    <ul\r\n      #scrollMe\r\n      style=\"overflow: scroll; height: 500px\"\r\n      [scrollTop]=\"scrollMe.scrollHeight\"\r\n      *ngIf=\"(messageService.messageThread$ | async)?.length > 0\"\r\n      class=\"chat\"\r\n    >\r\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img\r\n              class=\"rounded-circle\"\r\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n            />\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\">{{\r\n                  message.messageSent | timeago\r\n                }}</span>\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    !message.dateread && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (unread)\r\n                </span>\r\n                <span\r\n                  class=\"text-success\"\r\n                  *ngIf=\"\r\n                    message.dateread && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (read) {{ message.dateread | timeago }}\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{ message.content }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          name=\"messageContent\"\r\n          required\r\n          [(ngModel)]=\"messageContent\"\r\n          type=\"text\"\r\n          class=\"form-control input-sm\"\r\n          placeholder=\"Send a private message\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            [disabled]=\"!messageForm.valid\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input()\r\n  username: string;\r\n  @Input() messages: Message[];\r\n  messageContent: string;\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\r\n    <h4>{{ photo.username }}</h4>\r\n    <img\r\n      src=\"{{ photo.url }}\"\r\n      class=\"img-thumbnail p-1\"\r\n      alt=\"{{ photo.username }}\"\r\n    />\r\n    <div class=\"text-center\">\r\n      <button\r\n        class=\"btn btn-sm btn-success mr-1\"\r\n        (click)=\"approvePhoto(photo.id)\"\r\n      >\r\n        Approve\r\n      </button>\r\n      <button class=\"btn btn-sm btndanger\" (click)=\"rejectPhoto(photo.id)\">\r\n        Reject\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/Photo';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css'],\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n  photos: Photo[];\r\n  constructor(private adminService: AdminService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getPhotosForApproval();\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    this.adminService.getPhotosForApproval().subscribe((photos) => {\r\n      this.photos = photos;\r\n    });\r\n  }\r\n  approvePhoto(photoId) {\r\n    this.adminService.approvePhoto(photoId).subscribe(() => {\r\n      this.photos.splice(\r\n        this.photos.findIndex((p) => p.id === photoId),\r\n        1\r\n      );\r\n    });\r\n  }\r\n  rejectPhoto(photoId) {\r\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\r\n      this.photos.splice(\r\n        this.photos.findIndex((p) => p.id === photoId),\r\n        1\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>\r\n    Not found\r\n  </h1>\r\n  <button class=\"btn-info btn-lg\" routerLink=\"/\"> Return to homepage </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService) {}\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? (user.roles = roles) : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1])); //[0] = Header [1] = Payload\r\n  }\r\n}\r\n","<h4> Internal server error - refreshing the page will make the error disappear!</h4>\r\n\r\n<ng-container *ngIf=\"error\">\r\n  <h5 class=\"text-danger\">Error: {{error.message}} </h5>\r\n  <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n  <p>What to do next?</p>\r\n  <ol>\r\n    <li> Open the chrome dev tools </li>\r\n    <li> Inspect the network tab </li>\r\n    <li> Check the failing request </li>\r\n    <li> Examing the requerst URL - make sure it is correct </li>\r\n    <li> Reproduce the error in Postman - if we seen the same response, then the issue is not with Angular </li>\r\n  </ol>\r\n  <p>Following is the stack trace</p>\r\n  <code class=\"mt-5\" style=\"background-color: whitesmoke;\"> {{error.details}} </code>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  error : any\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation()\r\n    this.error = navigation?.extras?.state?.error\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Directive, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]',\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    if (!this.user?.roles || this.user === null) {\r\n      this.viewContainerRef.clear();\r\n      return;\r\n    }\r\n    if (this.user?.roles.some((r) => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerService: NgxSpinnerService) {}\r\n\r\n  busy() {\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined, {\r\n      type: 'square-jelly-box',\r\n      bdColor: 'rgba(0, 0, 0, 0.8)',\r\n      color: '#fff',\r\n    });\r\n  }\r\n\r\n  idle() {\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div *ngIf=\"!registerMode\"  style ='text-align: center;'>\r\n    <h1> Find your match</h1>\r\n    <p class = \"lead\"> Come on in to view your matches... all you need is to sign up!</p>\r\n    <div class=\"text-center\">\r\n      <button (click) =\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\"> Register </button>\r\n      <button class=\"btn btn-info btn-lg\"> Learn more </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"registerMode\" class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-4\">\r\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\" > </app-register>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  registerMode = false\r\n  users : any\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerToggle(){\r\n    this.registerMode = !this.registerMode\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean){\r\n    this.registerMode = event\r\n  }\r\n\r\n}\r\n","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (currentUser = user));\r\n\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","<div class=\"row mb-4\">\r\n  <div class=\"btn-group\" name=\"container\">\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Unread\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-envelope\"> Unread </i>\r\n    </button>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Inbox\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-envelope-open\"> Inbox </i>\r\n    </button>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Outbox\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-paper-plane\"> Outbox </i>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n  <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n    <tr>\r\n      <th style=\"width: 40%\">Message</th>\r\n      <th style=\"width: 20%\">From / To</th>\r\n      <th style=\"width: 20%\">Sent / Received</th>\r\n      <th style=\"width: 20%\">Message</th>\r\n    </tr>\r\n    <tr\r\n      [hidden]=\"loading\"\r\n      *ngFor=\"let message of messages\"\r\n      routerLink=\"{{\r\n        container === 'Outbox'\r\n          ? '/members/' + message.recipientUsername\r\n          : '/members/' + message.senderUsername\r\n      }}\"\r\n      [queryParams]=\"{ tab: 3 }\"\r\n    >\r\n      <td>{{ message.content }}</td>\r\n      <td>\r\n        <div *ngIf=\"container === 'Outbox'\">\r\n          <img\r\n            src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\r\n            alt=\"{{ message.recipientUsername }}\"\r\n            class=\"img-circle rounded-circle mr-2\"\r\n          />\r\n          <strong>{{ message.recipientUsername | titlecase }}</strong>\r\n        </div>\r\n        <div *ngIf=\"container !== 'Outbox'\">\r\n          <img\r\n            src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n            alt=\"{{ message.senderUsername }}\"\r\n            class=\"img-circle rounded-circle mr-2\"\r\n          />\r\n          <strong>{{ message.senderUsername | titlecase }}</strong>\r\n        </div>\r\n      </td>\r\n      <td>{{ message.messageSent | timeago }}</td>\r\n      <td>\r\n        <button\r\n          (click)=\"$event.stopPropagation()\"\r\n          (click)=\"deleteMessage(message.id)\"\r\n          class=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n    >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css'],\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmService: ConfirmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .getMessages(this.pageNumber, this.pageSize, this.container)\r\n      .subscribe((response) => {\r\n        this.messages = response.result;\r\n        this.pagination = response.pagination;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService\r\n      .confirm('Confirm delete message', 'This cannot be undone')\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.messageService.deleteMessage(id).subscribe(() => {\r\n            this.messages.splice(\r\n              this.messages.findIndex((m) => m.id === id),\r\n              1\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    console.log('sigo corriendo');\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.page;\r\n      this.loadMessages();\r\n    }\r\n  }\r\n}\r\n","<div class=\"form-group\">\n  <input\n    type=\"text\"\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\n    class=\"form-control\"\n    [formControl]=\"ngControl.control\"\n    placeholder=\"{{ label }}\"\n    bsDatepicker\n    [bsConfig]=\"bsConfig\"\n    [maxDate]=\"maxDate\"\n  />\n  <div\n    *ngIf=\"ngControl.control.errors?.required\"\n    class=\"invalid-feedback\"\n  ></div>\n</div>\n","import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-inputs',\n  templateUrl: './date-inputs.component.html',\n  styleUrls: ['./date-inputs.component.css'],\n})\nexport class DateInputsComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-dark-blue',\n      dateInputFormat: 'DD MM YYYY',\n    };\n  }\n\n  writeValue(obj: any): void {}\n  registerOnChange(fn: any): void {}\n  registerOnTouched(fn: any): void {}\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right',\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof error.error === 'object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n\r\n            case 401:\r\n              this.toastr.error(\r\n                error.statusText === 'OK' ? 'Unauthorized' : error.statusText,\r\n                error.status\r\n              );\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {\r\n                state: { error: error.error },\r\n              };\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.error(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator'))\r\n          return true;\r\n        this.toastr.error('You cannot enter this area');\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Photo } from '../_models/Photo';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<Partial<User[]>>(\r\n      this.baseUrl + 'admin/users-with-roles'\r\n    );\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post(\r\n      this.baseUrl + `admin/edit-roles/${username}?roles=` + roles,\r\n      {}\r\n    );\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    return this.http.get<Photo[]>(this.baseUrl + 'admin/photos-to-moderate');\r\n  }\r\n  approvePhoto(photoId: number) {\r\n    return this.http.post(this.baseUrl + 'admin/approve-photo/' + photoId, {});\r\n  }\r\n  rejectPhoto(photoId: number) {\r\n    return this.http.post(this.baseUrl + 'admin/reject-photo/' + photoId, {});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css'],\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe((users) => {\r\n      this.users = users;\r\n    });\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user),\r\n      },\r\n    };\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\r\n      const rolesToUpdate = {\r\n        roles: [\r\n          ...values.filter((el) => el.checked === true).map((el) => el.name),\r\n        ],\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService\r\n          .updateUserRoles(user.username, rolesToUpdate.roles)\r\n          .subscribe(() => {\r\n            user.roles = [...rolesToUpdate.roles];\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      { name: 'Admin', value: 'Admin' },\r\n      { name: 'Moderator', value: 'Moderator' },\r\n      { name: 'Member', value: 'Member' },\r\n    ];\r\n\r\n    availableRoles.forEach((role) => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    });\r\n\r\n    return roles;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <table class=\"table\">\r\n    <tr>\r\n      <th style=\"width: 30%\">Username</th>\r\n      <th style=\"width: 40%\">Active Roles</th>\r\n      <th style=\"width: 30%\"></th>\r\n    </tr>\r\n    <tr *ngFor=\"let user of users\">\r\n      <td>{{ user.username }}</td>\r\n      <td>{{ user.roles }}</td>\r\n      <td>\r\n        <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">\r\n          Edit roles\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  NgxGalleryAnimation,\r\n  NgxGalleryImage,\r\n  NgxGalleryOptions,\r\n} from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css'],\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(\r\n    public presence: PresenceService,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService,\r\n    private accountService: AccountService,\r\n    private router: Router\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe((data) => {\r\n      this.member = data.member;\r\n    });\r\n    this.route.queryParams.subscribe((params) => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    });\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false,\r\n      },\r\n    ];\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url,\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService\r\n      .getMessagesThread(this.member.username)\r\n      .subscribe((messages) => (this.messages = messages));\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img\r\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ member.knownAs }}\"\r\n        class=\"card-img-top img-thumbnail\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <div\r\n          class=\"mb-2\"\r\n          *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\"\r\n        >\r\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n        </div>\r\n        <div>\r\n          <strong> Location:</strong>\r\n          <p>{{ member.city }}, {{ member.country }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Age:</strong>\r\n          <p>{{ member.age }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Last Activate:</strong>\r\n          <p>{{ member.lastActive | timeago }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Member since:</strong>\r\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <div class=\"btn-group d-flex\">\r\n          <button class=\"btn btn-success\">Like</button>\r\n          <button (click)=\"selectTab(3)\" class=\"btn btn-info\">Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\" #memberTabs>\r\n      <tab\r\n        heading=\"About {{ member.knownAs }}\"\r\n        (selectTab)=\"onTabActivated($event)\"\r\n      >\r\n        <h4>Desctription</h4>\r\n        <p>{{ member.introduction }}</p>\r\n        <h4>Looking for</h4>\r\n        <p>{{ member.lookingFor }}</p>\r\n      </tab>\r\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\r\n        <h4>Interests</h4>\r\n        <p>{{ member.interests }}</p>\r\n      </tab>\r\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\r\n        <ngx-gallery\r\n          [options]=\"galleryOptions\"\r\n          [images]=\"galleryImages\"\r\n          style=\"display: inline-block; margin-bottom: 20px\"\r\n        ></ngx-gallery>\r\n      </tab>\r\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\r\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user =>{\r\n        if (user) return true\r\n        this.toastr.error(\"You shall not pass!\")\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.hubConnection.start().catch((error) => console.log(error));\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some((x) => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateread) {\r\n              message.dateread = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessagesThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'messages/thread/' + username\r\n    );\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection\r\n      .invoke('SendMessage', {\r\n        recipientUsername: username,\r\n        content,\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <form\r\n    #form=\"ngForm\"\r\n    class=\"form-inline mb-3\"\r\n    (ngSubmit)=\"loadMembers()\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label> Age from: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"minAge\"\r\n        [(ngModel)]=\"userParams.minAge\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group px-2\">\r\n      <label> Age to: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"maxAge\"\r\n        [(ngModel)]=\"userParams.maxAge\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group px-2\">\r\n      <label> Show: </label>\r\n      <select\r\n        name=\"gender\"\r\n        style=\"width: 130px\"\r\n        [(ngModel)]=\"userParams.gender\"\r\n        class=\"form-control ml-1\"\r\n      >\r\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n          {{ gender.display }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply filters</button>\r\n    <button (click)=\"resetFilters()\" class=\"btn btn-warning ml-1\" type=\"submit\">\r\n      Reset filters\r\n    </button>\r\n\r\n    <div class=\"col\">\r\n      <div class=\"btn-group float-right\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"lastActive\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Last Active\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-info\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"created\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Newest Members\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *ngFor=\"let member of members\" class=\"col-2\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css'],\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' },\r\n  ];\r\n\r\n  constructor(private membersService: MembersService) {\r\n    this.userParams = membersService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.membersService.setUserParams(this.userParams);\r\n    this.membersService.getMembers(this.userParams).subscribe((response) => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    });\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.membersService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.membersService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating App';\r\n  users: any;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private presence: PresenceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n  }\r\n}\r\n","<app-nav></app-nav>\r\n\r\n<ngx-spinner>\r\n  <h3>Loading ...</h3>\r\n</ngx-spinner>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      delay(500),\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    });\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n    let params = getPaginationHeaders(\r\n      userParams.pageNumber,\r\n      userParams.pageSize\r\n    );\r\n\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(\r\n      this.baseUrl + 'users',\r\n      params,\r\n      this.http\r\n    ).pipe(\r\n      map((response) => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username === username);\r\n\r\n    if (member) {\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + `users/${username}`);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    );\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(\r\n      this.baseUrl + 'likes',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputsComponent } from './_forms/date-inputs/date-inputs.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputsComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/Photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css'],\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver: boolean;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private memberService: MembersService\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach((p) => {\r\n        if (p.isMain) p.isMain = false;\r\n        if (p.id === photo.id) p.isMain = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter((x) => x.id !== photoId);\r\n    });\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024,\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n        if (photo.isMain) {\r\n          this.user.photoUrl = photo.url;\r\n          this.member.photoUrl = photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n    <img\r\n      src=\"{{ photo.url }}\"\r\n      alt=\"{{ photo.url }}\"\r\n      class=\"img-thumbnail p-1\"\r\n      [class.not-approved]=\"!photo.isApproved\"\r\n    />\r\n\r\n    <div class=\"text-center img-text\" *ngIf=\"!photo.isApproved\">\r\n      <span class=\"text-danger\">Awaiting approval</span>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center mt-1 mb-2\">\r\n      <button\r\n        [disabled]=\"photo.isMain || !photo.isApproved\"\r\n        (click)=\"setMainPhoto(photo)\"\r\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\r\n        class=\"btn btn-sm\"\r\n      >\r\n        Main\r\n      </button>\r\n      <button\r\n        [disabled]=\"photo.isMain\"\r\n        (click)=\"deletePhoto(photo.id)\"\r\n        class=\"btn btn-sm btn-danger\"\r\n      >\r\n        <i class=\"fa fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-3\">\r\n    <h3>Select files</h3>\r\n\r\n    <div\r\n      ng2FileDrop\r\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropZoneOver }\"\r\n      (fileOver)=\"fileOverBase($event)\"\r\n      [uploader]=\"uploader\"\r\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\"\r\n    >\r\n      <i class=\"fa fa-upload fa-3x\"></i>\r\n      Drop photos here\r\n    </div>\r\n\r\n    Multiple\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\r\n\r\n    Single\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div\r\n    class=\"col-md-9\"\r\n    style=\"margin-bottom: 40px\"\r\n    *ngIf=\"uploader?.queue?.length\"\r\n  >\r\n    <h3>Upload queue</h3>\r\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th width=\"50%\">Name</th>\r\n          <th>Size</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of uploader.queue\">\r\n          <td>\r\n            <strong>{{ item?.file?.name }}</strong>\r\n          </td>\r\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\r\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div>\r\n      <div>\r\n        Queue progress:\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success btn-s\"\r\n        (click)=\"uploader.uploadAll()\"\r\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\r\n      >\r\n        <span class=\"fa fa-upload\"></span> Upload all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-warning btn-s\"\r\n        (click)=\"uploader.cancelAll()\"\r\n        [disabled]=\"!uploader.isUploading\"\r\n      >\r\n        <span class=\"fa fa-ban\"></span> Cancel all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger btn-s\"\r\n        (click)=\"uploader.clearQueue()\"\r\n        [disabled]=\"!uploader.queue.length\"\r\n      >\r\n        <span class=\"fa fa-trash\"></span> Remove all\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  Resolve,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot,\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n  constructor(private memberService: MembersService) {}\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type=\"{{ type }}\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    Please enter a {{ label }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at least\r\n    {{ ngControl.control.errors.minlegth[\"requiredLength\"] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n    {{ label }} must be at most\r\n    {{ ngControl.control.errors.maxlength[\"requiredLength\"] }}\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\r\n    Confirm password do not match\r\n  </div>\r\n</div>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css'],\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n  registerOnChange(fn: any): void {}\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>\r\n    {{ predicate === \"liked\" ? \"Members I likes\" : \"Members who like me\" }}\r\n  </h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"btn-group\" name=\"predicate\">\r\n      <button\r\n        class=\"btn btn-primary\"\r\n        btnRadio=\"liked\"\r\n        [(ngModel)]=\"predicate\"\r\n        (click)=\"loadLikes()\"\r\n      >\r\n        Members I like\r\n      </button>\r\n      <button\r\n        class=\"btn btn-warning\"\r\n        btnRadio=\"likedBy\"\r\n        [(ngModel)]=\"predicate\"\r\n        (click)=\"loadLikes()\"\r\n      >\r\n        Members who like me\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\">\r\n    <div class=\"col-2\" *ngFor=\"let member of members\">\r\n      <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css'],\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes() {\r\n    this.memberService\r\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\r\n      .subscribe((response) => {\r\n        this.members = response.result;\r\n        this.pagination = response.pagination;\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\" routerLinkActive=\"active\"\r\n      >Dating App</a\r\n    >\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\"\r\n            >Matches</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\"\r\n            >Lists</a\r\n          >\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\"\r\n            >Messages</a\r\n          >\r\n        </li>\r\n        <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\"\r\n            >Admin</a\r\n          >\r\n        </li>\r\n      </ng-container>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\"\r\n          >Errors</a\r\n        >\r\n      </li>\r\n    </ul>\r\n\r\n    <div\r\n      class=\"dropdown\"\r\n      *ngIf=\"accountService.currentUser$ | async as user\"\r\n      dropdown\r\n    >\r\n      <img\r\n        src=\"{{ user.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ user.username }}\"\r\n      />\r\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>\r\n        Welcome {{ user.knownAs || user.username | titlecase }}\r\n      </a>\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a routerLink=\"/member/edit\" class=\"dropdown-item\"> Edit Profile </a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a class=\"dropdown-item\" (click)=\"logout()\"> Logout </a>\r\n      </div>\r\n    </div>\r\n\r\n    <form\r\n      #loginForm=\"ngForm\"\r\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n      class=\"form-inline mt-2 mt-md-0\"\r\n      (ngSubmit)=\"login()\"\r\n      autocomplete=\"off\"\r\n    >\r\n      <input\r\n        name=\"username\"\r\n        [(ngModel)]=\"model.username\"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n      />\r\n\r\n      <input\r\n        name=\"password\"\r\n        [(ngModel)]=\"model.password\"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n  constructor(\r\n    public accountService: AccountService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login() {\r\n    this.accountService.login(this.model).subscribe((response) => {\r\n      this.router.navigateByUrl('/members');\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css'],\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n  constructor(\r\n    private memberService: MembersService,\r\n    private toastr: ToastrService,\r\n    public presence: PresenceService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success(`You have liked ${member.knownAs}`);\r\n    });\r\n  }\r\n}\r\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img\r\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n      alt=\"{{ member.knownAs }}\"\r\n      class=\"card-img-top\"\r\n    />\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <button class=\"btn-primary\" routerLink=\"/members/{{ member.username }}\">\r\n          <i class=\"fa fa-user\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button (click)=\"addLike(member)\" class=\"btn-primary\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button\r\n          class=\"btn-primary\"\r\n          routerLink=\"/members/{{ member.username }}\"\r\n          [queryParams]=\"{ tab: 3 }\"\r\n        >\r\n          <i class=\"fa fa-envelope\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <span\r\n        [class.is-online]=\"\r\n          (presence.onlineUsers$ | async).includes(member.username)\r\n        \"\r\n      >\r\n        <i class=\"fa fa-user mr-2\"></i>\r\n      </span>\r\n      {{ member.knownAs }}, {{ member.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) {}\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.hubConnection.start().catch((error) => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([...usernames, username]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UserIsOffline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([\r\n          ...usernames.filter((x) => x !== username),\r\n        ]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\r\n      this.toastr\r\n        .info(knownAs + ' has sent you a new message!')\r\n        .onTap.pipe(take(1))\r\n        .subscribe(() =>\r\n          this.router.navigateByUrl('/members/' + username + '?tab=3')\r\n        );\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch((error) => console.log(error));\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n  gender: string;\r\n  minAge = 18;\r\n  maxAge = 99;\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  orderBy = 'lastActive';\r\n\r\n  constructor(user: User) {\r\n    this.gender = user.gender === 'female' ? 'male' : 'female';\r\n  }\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n  <tabset class=\"member-tabset\">\r\n    <tab heading=\"User management\" *appHasRole=\"['Admin']\">\r\n      <div class=\"container\">\r\n        <app-user-management></app-user-management>\r\n      </div>\r\n    </tab>\r\n\r\n    <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\r\n      <div class=\"container\">\r\n        <app-photo-management></app-photo-management>\r\n      </div>\r\n    </tab>\r\n  </tabset>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css'],\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\r\n    $event: any\r\n  ) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private memberService: MembersService,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService\r\n      .getMember(this.user.username)\r\n      .subscribe((member) => (this.member = member));\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n  <div class=\"col-4\">\r\n    <h1>Your profile</h1>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n      <strong>Information:</strong> You have made changes. Any unsaved changes\r\n      will be lost\r\n    </div>\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img\r\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ member.knownAs }}\"\r\n        class=\"card-img-top img-thumbnail\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <strong> Location:</strong>\r\n          <p>{{ member.city }}, {{ member.country }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Age:</strong>\r\n          <p>{{ member.age }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Last Activate:</strong>\r\n          <p>{{ member.lastActive | timeago }}</p>\r\n        </div>\r\n        <div>\r\n          <strong> Member since:</strong>\r\n          <p>{{ member.created | date: \"dd MMM yyyy\" }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <button\r\n          [disabled]=\"!editForm.dirty\"\r\n          form=\"editForm\"\r\n          class=\"btn btn-success btn-block\"\r\n          type=\"submit\"\r\n        >\r\n          Save changes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\">\r\n      <tab heading=\"About {{ member.knownAs }}\">\r\n        <form #editForm=\"ngForm\" (ngSubmit)=\"updateMember()\" id=\"editForm\">\r\n          <h4>Desctription</h4>\r\n          <textarea\r\n            [(ngModel)]=\"member.introduction\"\r\n            name=\"introduction\"\r\n            rows=\"6\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Looking for</h4>\r\n          <textarea\r\n            [(ngModel)]=\"member.lookingFor\"\r\n            name=\"lookingFor\"\r\n            rows=\"6\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Interests</h4>\r\n          <textarea\r\n            [(ngModel)]=\"member.interests\"\r\n            name=\"interests\"\r\n            rows=\"6\"\r\n            class=\"form-control\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Location Details</h4>\r\n          <div class=\"form-inline\">\r\n            <label for=\"city\"> City: </label>\r\n            <input\r\n              [(ngModel)]=\"member.city\"\r\n              type=\"text\"\r\n              name=\"city\"\r\n              class=\"form-control mx-2\"\r\n            />\r\n            <label for=\"country\"> Country: </label>\r\n            <input\r\n              [(ngModel)]=\"member.country\"\r\n              type=\"text\"\r\n              name=\"country\"\r\n              class=\"form-control mx-2\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </tab>\r\n      <tab heading=\"Edit Photos\">\r\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map((response) => {\r\n      paginatedResult.result = response.body;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(\r\n          response.headers.get('Pagination')\r\n        );\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n  constructor(private confirmService: ConfirmService) {}\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm();\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{ message }}</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent },\r\n      {\r\n        path: 'members/:username',\r\n        component: MemberDetailComponent,\r\n        resolve: { member: MemberDetailedResolver },\r\n      },\r\n      {\r\n        path: 'member/edit',\r\n        component: MemberEditComponent,\r\n        canDeactivate: [PreventUnsavedChangesGuard],\r\n      },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      {\r\n        path: 'admin',\r\n        component: AdminPanelComponent,\r\n        canActivate: [AdminGuard],\r\n      },\r\n    ],\r\n  },\r\n  { path: 'errors', component: TestErrorsComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: 'server-error', component: ServerErrorComponent },\r\n  { path: '**', component: HomeComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModal: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    this.bsModal = this.modalService.show(ConfirmDialogComponent, config);\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModal.onHidden.subscribe(() => {\n        observer.next(this.bsModal.content.result);\n        observer.complete();\n      });\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css'],\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[];\r\n\r\n  constructor(public bsModalRef: BsModalRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit Roles for {{ user.username }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n      <input\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        [checked]=\"role.checked\"\r\n        value=\"role.name\"\r\n        (change)=\"role.checked = !role.checked\"\r\n        [disabled]=\"roles.name === 'Admin' && user.username === 'admin'\"\r\n      />\r\n      <label> {{ role.name }} </label>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}